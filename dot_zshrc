# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="$PATH:$HOME/.local/bin"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load. Disable to use Pure Prompt
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  aliases
  asdf
  conda
  conda-env
  docker
  git
  history
  jira
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
# end of oh-my-zsh initialization

## User configuration
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR="code --wait"
fi

# Load theme selectively
if [ -z "$ZSH_THEME" ]; then
  # Activate Pure Prompt (conflicts with ohmyzsh themes, set theme to "" first)
  # autoload -U promptinit; promptinit
  # prompt pure
  autoload -U promptinit; promptinit
  prompt pure
else
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
fi

# Load FZF
source <(fzf --zsh)

# Aliases
alias codi="code-insiders"



### Package managers and development tools

# Load asdf
. "$HOME/.asdf/asdf.sh"

# NVM configuration
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
autoload -Uz compinit
compinit
# nvm end

# Add RVM to PATH for scripting.
export PATH="/usr/local/opt/ruby/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"
# rvm end

# Yarn global bin
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
# yarn end

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
# bun end

# Added by Amplify CLI binary installer
export PATH="$HOME/.amplify/bin:$PATH"
# amplify end

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# pyenv
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/bbaaxx/.miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/bbaaxx/.miniforge3/etc/profile.d/conda.sh" ]; then
        . "/Users/bbaaxx/.miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/bbaaxx/.miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/bbaaxx/.miniforge3/etc/profile.d/mamba.sh" ]; then
    . "/Users/bbaaxx/.miniforge3/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

# The following lines were added by compinstall

# zstyle ':completion:*' completer _complete _ignored
# zstyle :compinstall filename '/Users/bbaaxx/.zshrc'
# autoload -Uz compinit
# compinit
